generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model admin_panel {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String       @db.Uuid
  device_id       String       @db.Uuid
  site_id         String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  device          device       @relation(fields: [device_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  site            site         @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model device {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String          @db.VarChar(255)
  model           String          @db.VarChar(255)
  serial_number   String          @db.VarChar(255)
  status          String          @db.VarChar(255)
  organization_id String          @db.Uuid
  created_at      DateTime        @default(now()) @db.Timestamp(6)
  updated_at      DateTime        @default(now()) @db.Timestamp(6)
  admin_panel     admin_panel[]
  organization    organization    @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  traffic_graph   traffic_graph[]
}

model organization {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  admin_panel admin_panel[]
  device      device[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  site        site[]
}

model site {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String        @db.VarChar(255)
  location        String        @db.VarChar(255)
  status          String        @db.VarChar(255)
  organization_id String        @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  admin_panel     admin_panel[]
  organization    organization  @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model traffic_graph {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  time_stamp       DateTime @db.Timestamp(6)
  incoming_traffic Int
  outgoing_traffic Int
  total_traffic    Int
  device_id        String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  device           device   @relation(fields: [device_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
}
